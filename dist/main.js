var Client=function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){},function(e,t,n){"use strict";function o(e){console.log("displayLog running, data received from server is"),console.log(e);const t=document.getElementById("saved-trips");t.innerHTML="",t.style.display="block",e.map((e=>{const n=document.createElement("div");n.classList.add("log-card");const r=Client.timeDiff(e.departureDate),i=`\n                        <img src=${e.cityImgSrc}/>\n                        <h3>${e.city}</h3>\n                        <p>${e.temp}¬∞C  - ${r}</p>\n                        `,c=document.createElement("button");c.innerHTML="delete";const s={value:e.logId};c.setAttribute("value",s),c.classList.add("cta"),c.addEventListener("click",(()=>{console.log(s),Client.postData("http://localhost:5005/delete",s).then((e=>o(e)))})),n.insertAdjacentHTML("beforeend",i),n.appendChild(c),t.appendChild(n)}))}function r(e){const t=document.getElementById("search-results");t.innerHTML="",t.style.display="block";const n=Client.timeDiff(e.departureDate);let o;o=`<div class="search-card">                 \n  <img src="${e.cityImgSrc}">\n  <div class="search-detail">\n  <h1>${e.city}</h1>\n  <p> ${e.temp}¬∞C - ${n} </p>\n  <button id="save" class="cta" href="#log-section">save</button>\n  </div>\n  </div>`,console.log("updateUI is running"),console.log(o),t.insertAdjacentHTML("beforeend",o),document.getElementById("save").addEventListener("click",(()=>Client.handleSave(e)))}n.r(t),n.d(t,"displayLog",(function(){return o})),n.d(t,"displaySearch",(function(){return r})),n.d(t,"handleFind",(function(){return i})),n.d(t,"handleSave",(function(){return c})),n.d(t,"postData",(function(){return s})),n.d(t,"updateUI",(function(){return l})),n.d(t,"timeDiff",(function(){return a}));const i=e=>{e.preventDefault();const t={destinationCity:document.getElementById("destination").value,departureDate:document.getElementById("date").value};Client.postData("http://localhost:5005/find",t).then((e=>{Client.displaySearch(e)})),document.getElementById("search-results").scrollIntoView({behavior:"smooth"})};function c(e){console.log("handleSave running"),Client.postData("http://localhost:5005/save",e).then((e=>{Client.displayLog(e)}));const t=document.getElementById("search-results");t.innerHTML="",t.style.display="block"}const s=async(e,t)=>{console.log("postData is running");const n=await fetch(e,{method:"POST",credentials:"same-origin",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});try{return await n.json()}catch(e){return{error:e}}};function l(e){const t=document.getElementById("search-results");let n;t.innerHTML="",t.style.display="block";const o=`http://openweathermap.org/img/wn/${e.icon}@2x.png`;n=`\n                  <img src="${e.cityImgSrc}">\n                  <div class="card">\n                  <h1>${e.city}</h1>\n                  <img src="${o}">\n                  <p>${e.temp} ¬∞C with ${e.description}</p>\n                  <button type="submit" id="save">Log trip</button>\n                  </div>`,console.log("updateUI is running"),console.log(n),t.insertAdjacentHTML("beforeend",n);document.selectElementByID("save").addEventListener(click,Client.handleSave(e))}function a(e){console.log("timeDiff is running"),console.log(`input date is ${e}`);const t=new Date;t.setHours(0,0,0),console.log(t);const n=Date.parse(e);console.log(n);const o=Math.floor((n-t)/1e3/60/60/24);let r;return console.log(o),r=0===o?"Today üëù":o<-1?-1*o+" days ago":-1===o?"Yesterday":1===o?"Tomorrow":`In ${o} days`,console.log(r),r}n(0),n.p}]);